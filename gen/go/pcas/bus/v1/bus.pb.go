// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pcas/bus/v1/bus.proto

package busv1

import (
	v1 "github.com/soaringjerry/pcas/gen/go/pcas/events/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PublishResponse is the response from publishing an event
type PublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	mi := &file_pcas_bus_v1_bus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pcas_bus_v1_bus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_pcas_bus_v1_bus_proto_rawDescGZIP(), []int{0}
}

// SubscribeRequest is the request for subscribing to the event stream
type SubscribeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the client subscribing to events
	ClientId      string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_pcas_bus_v1_bus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pcas_bus_v1_bus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_pcas_bus_v1_bus_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// SearchRequest is the request for semantic search
type SearchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The natural language query text
	QueryText string `protobuf:"bytes,1,opt,name=query_text,json=queryText,proto3" json:"query_text,omitempty"`
	// Number of top results to return (default: 5)
	TopK int32 `protobuf:"varint,2,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty"`
	// Optional user ID to filter results by
	UserId        string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_pcas_bus_v1_bus_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pcas_bus_v1_bus_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_pcas_bus_v1_bus_proto_rawDescGZIP(), []int{2}
}

func (x *SearchRequest) GetQueryText() string {
	if x != nil {
		return x.QueryText
	}
	return ""
}

func (x *SearchRequest) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *SearchRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// SearchResponse is the response from semantic search
type SearchResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The matching events found
	Events []*v1.Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	// Similarity scores corresponding to each event (0.0 to 1.0)
	Scores        []float32 `protobuf:"fixed32,2,rep,packed,name=scores,proto3" json:"scores,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_pcas_bus_v1_bus_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pcas_bus_v1_bus_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_pcas_bus_v1_bus_proto_rawDescGZIP(), []int{3}
}

func (x *SearchResponse) GetEvents() []*v1.Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *SearchResponse) GetScores() []float32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

var File_pcas_bus_v1_bus_proto protoreflect.FileDescriptor

const file_pcas_bus_v1_bus_proto_rawDesc = "" +
	"\n" +
	"\x15pcas/bus/v1/bus.proto\x12\vpcas.bus.v1\x1a\x1apcas/events/v1/event.proto\"\x11\n" +
	"\x0fPublishResponse\"/\n" +
	"\x10SubscribeRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\\\n" +
	"\rSearchRequest\x12\x1d\n" +
	"\n" +
	"query_text\x18\x01 \x01(\tR\tqueryText\x12\x13\n" +
	"\x05top_k\x18\x02 \x01(\x05R\x04topK\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\"W\n" +
	"\x0eSearchResponse\x12-\n" +
	"\x06events\x18\x01 \x03(\v2\x15.pcas.events.v1.EventR\x06events\x12\x16\n" +
	"\x06scores\x18\x02 \x03(\x02R\x06scores2\xd9\x01\n" +
	"\x0fEventBusService\x12>\n" +
	"\aPublish\x12\x15.pcas.events.v1.Event\x1a\x1c.pcas.bus.v1.PublishResponse\x12C\n" +
	"\tSubscribe\x12\x1d.pcas.bus.v1.SubscribeRequest\x1a\x15.pcas.events.v1.Event0\x01\x12A\n" +
	"\x06Search\x12\x1a.pcas.bus.v1.SearchRequest\x1a\x1b.pcas.bus.v1.SearchResponseB\xa0\x01\n" +
	"\x0fcom.pcas.bus.v1B\bBusProtoP\x01Z5github.com/soaringjerry/pcas/gen/go/pcas/bus/v1;busv1\xa2\x02\x03PBX\xaa\x02\vPcas.Bus.V1\xca\x02\vPcas\\Bus\\V1\xe2\x02\x17Pcas\\Bus\\V1\\GPBMetadata\xea\x02\rPcas::Bus::V1b\x06proto3"

var (
	file_pcas_bus_v1_bus_proto_rawDescOnce sync.Once
	file_pcas_bus_v1_bus_proto_rawDescData []byte
)

func file_pcas_bus_v1_bus_proto_rawDescGZIP() []byte {
	file_pcas_bus_v1_bus_proto_rawDescOnce.Do(func() {
		file_pcas_bus_v1_bus_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pcas_bus_v1_bus_proto_rawDesc), len(file_pcas_bus_v1_bus_proto_rawDesc)))
	})
	return file_pcas_bus_v1_bus_proto_rawDescData
}

var file_pcas_bus_v1_bus_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pcas_bus_v1_bus_proto_goTypes = []any{
	(*PublishResponse)(nil),  // 0: pcas.bus.v1.PublishResponse
	(*SubscribeRequest)(nil), // 1: pcas.bus.v1.SubscribeRequest
	(*SearchRequest)(nil),    // 2: pcas.bus.v1.SearchRequest
	(*SearchResponse)(nil),   // 3: pcas.bus.v1.SearchResponse
	(*v1.Event)(nil),         // 4: pcas.events.v1.Event
}
var file_pcas_bus_v1_bus_proto_depIdxs = []int32{
	4, // 0: pcas.bus.v1.SearchResponse.events:type_name -> pcas.events.v1.Event
	4, // 1: pcas.bus.v1.EventBusService.Publish:input_type -> pcas.events.v1.Event
	1, // 2: pcas.bus.v1.EventBusService.Subscribe:input_type -> pcas.bus.v1.SubscribeRequest
	2, // 3: pcas.bus.v1.EventBusService.Search:input_type -> pcas.bus.v1.SearchRequest
	0, // 4: pcas.bus.v1.EventBusService.Publish:output_type -> pcas.bus.v1.PublishResponse
	4, // 5: pcas.bus.v1.EventBusService.Subscribe:output_type -> pcas.events.v1.Event
	3, // 6: pcas.bus.v1.EventBusService.Search:output_type -> pcas.bus.v1.SearchResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pcas_bus_v1_bus_proto_init() }
func file_pcas_bus_v1_bus_proto_init() {
	if File_pcas_bus_v1_bus_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pcas_bus_v1_bus_proto_rawDesc), len(file_pcas_bus_v1_bus_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pcas_bus_v1_bus_proto_goTypes,
		DependencyIndexes: file_pcas_bus_v1_bus_proto_depIdxs,
		MessageInfos:      file_pcas_bus_v1_bus_proto_msgTypes,
	}.Build()
	File_pcas_bus_v1_bus_proto = out.File
	file_pcas_bus_v1_bus_proto_goTypes = nil
	file_pcas_bus_v1_bus_proto_depIdxs = nil
}
