name: CI
on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  pre-build:
    uses: ./.github/workflows/generate-code.yml

  lint-test:
    runs-on: ubuntu-latest
    needs: pre-build
    steps:
      - uses: actions/checkout@v4
      
      - uses: bufbuild/buf-setup-action@v1
      
      - name: Check for breaking changes in protobuf
        run: buf breaking --against '.git#branch=main'
        continue-on-error: true # Temporarily allow failure

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          
      - name: Sync vendor directory
        run: go mod vendor
          
      - name: Run go vet
        run: go vet ./...
        
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.61.0
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        
      - name: Clean Go Cache and Download Modules
        run: |
          go clean -modcache
          go mod download
          go mod verify
        
      - name: Lint Go files
        run: make lint
        
      - name: Run tests
        run: make test

  e2e-test-sqlite:
    runs-on: ubuntu-latest
    needs: [pre-build, lint-test]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          
      - name: Sync vendor directory
        run: go mod vendor
        
      - name: Build binaries
        run: make build
        
      - name: Install SQLite
        run: |
          sudo apt-get update
          sudo apt-get install -y sqlite3
          
      - name: Run Quick Start validation (SQLite mode)
        run: |
          chmod +x ./scripts/validate_quickstart.sh
          bash ./scripts/validate_quickstart.sh --mode sqlite
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'dummy-key-for-testing' }}
          PCAS_RAG_ENABLED: "true"
          
  e2e-test-docker:
    runs-on: ubuntu-latest
    needs: [pre-build, lint-test]
    # Only run Docker tests on main branch or when explicitly requested
    if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'test-docker')
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          
      - name: Sync vendor directory
        run: go mod vendor
        
      - name: Build binaries
        run: make build
        
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          
      - name: Run Quick Start validation (Docker mode)
        run: |
          chmod +x ./scripts/validate_quickstart.sh
          bash ./scripts/validate_quickstart.sh --mode docker
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'dummy-key-for-testing' }}