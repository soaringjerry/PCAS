# Development Dockerfile with hot reload support
FROM golang:1.24-alpine

# Install build dependencies
RUN apk add --no-cache git make curl

# Install air for hot reload
RUN go install github.com/cosmtrek/air@v1.51.0

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Set CGO_ENABLED=0 to avoid CGO dependencies
ENV CGO_ENABLED=0

# Copy the entire project
COPY . .

# Create .air.toml for hot reload configuration
RUN echo 'root = "."' > .air.toml && \
    echo 'tmp_dir = "tmp"' >> .air.toml && \
    echo '' >> .air.toml && \
    echo '[build]' >> .air.toml && \
    echo 'cmd = "make build"' >> .air.toml && \
    echo 'bin = "./bin/pcas"' >> .air.toml && \
    echo 'full_bin = "./bin/pcas serve"' >> .air.toml && \
    echo 'include_ext = ["go", "proto", "yaml"]' >> .air.toml && \
    echo 'exclude_dir = ["assets", "tmp", "vendor", "data", "gen"]' >> .air.toml && \
    echo 'include_dir = []' >> .air.toml && \
    echo 'exclude_file = []' >> .air.toml && \
    echo 'delay = 1000' >> .air.toml && \
    echo 'stop_on_error = true' >> .air.toml && \
    echo 'log = "air_errors.log"' >> .air.toml && \
    echo '' >> .air.toml && \
    echo '[log]' >> .air.toml && \
    echo 'time = true' >> .air.toml && \
    echo '' >> .air.toml && \
    echo '[color]' >> .air.toml && \
    echo 'main = "magenta"' >> .air.toml && \
    echo 'watcher = "cyan"' >> .air.toml && \
    echo 'build = "yellow"' >> .air.toml && \
    echo 'runner = "green"' >> .air.toml

# Expose gRPC port
EXPOSE 50051

# Default command (will be overridden by docker-compose)
CMD ["air", "-c", ".air.toml"]